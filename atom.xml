<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cheng Ting&#39;s Blog</title>
  
  <subtitle>PATH To Engineer</subtitle>
  <link href="https://danny3766.github.io/atom.xml" rel="self"/>
  
  <link href="https://danny3766.github.io/"/>
  <updated>2023-01-13T18:37:25.379Z</updated>
  <id>https://danny3766.github.io/</id>
  
  <author>
    <name>Cheng Ting</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 007 (新增候選人，存檔失敗的情況)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-007-%E6%96%B0%E5%A2%9E%E5%80%99%E9%81%B8%E4%BA%BA%EF%BC%8C%E5%AD%98%E6%AA%94%E5%A4%B1%E6%95%97%E7%9A%84%E6%83%85%E6%B3%81/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-007-%E6%96%B0%E5%A2%9E%E5%80%99%E9%81%B8%E4%BA%BA%EF%BC%8C%E5%AD%98%E6%AA%94%E5%A4%B1%E6%95%97%E7%9A%84%E6%83%85%E6%B3%81/</id>
    <published>2023-01-13T18:32:30.000Z</published>
    <updated>2023-01-13T18:37:25.379Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。"><a href="#什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。" class="headerlink" title="什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。"></a>什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。</h2><ul><li>進入<code>mondel/candidate.rb</code> 在這個<code>model</code>裡面，我們來增加驗證的內容。<span id="more"></span>需要驗證<code>Name</code>欄位，是否有存在<code>validates :name, presence: true</code><br><img src="https://i.imgur.com/IztV3wg.png"></li></ul><hr><p>接著我們回到<code>CandidatesController</code>的<code>create action</code>，來寫驗證失敗的話，我們要怎麼做。<br>在<code>create action</code> <code>else</code> 輸入<code>redirect_to &#39;/candidate/new&#39;</code><br>表示如果驗證失敗，就將頁面導入到”新增候選人”頁面<br><img src="https://i.imgur.com/nhsUaTQ.png"></p><hr><p>打開瀏覽器來試試看，我們先在新增的表單頁面，故意空著<code>Name</code>欄位。<br><img src="https://i.imgur.com/XHfLdrB.png"></p><hr><p>按下送出按鈕，看看網址列，確實有導回新增候選人頁面，但我們也可以發現剛剛有填寫的欄位資料也 <strong>一併被清空了</strong> 。<br><img src="https://i.imgur.com/LDTjJl5.png"></p><hr><h3 id="要如何做到保留原本填寫的資料，然後又可以提醒使用者有欄位忘記填寫。"><a href="#要如何做到保留原本填寫的資料，然後又可以提醒使用者有欄位忘記填寫。" class="headerlink" title="要如何做到保留原本填寫的資料，然後又可以提醒使用者有欄位忘記填寫。"></a>要如何做到保留原本填寫的資料，然後又可以提醒使用者有欄位忘記填寫。</h3><ul><li>目前可以確定的事情，使用 <code>redirect_to &#39;/candidate/new&#39;</code> 不是好的做法。因為會直接把頁面整個清空，讓使用者重新填寫。</li></ul><p>我們來修改一下，使用<code>render :new</code>方法來重新導入頁面。如果存檔失敗的話，我們就去借 new 這個 template，把畫面重新「畫」出來。<br><img src="https://i.imgur.com/juCRrMz.png"></p><blockquote><p>這裡需要注意的地方，<code>render :new</code>其中的<code>:new</code> 並不是指同樣<code>CandidatesController</code>的<code>new action</code>。<br>而是我們去借用<code>view/new.html.erb</code>這個檔案，重新將畫面「渲染」出來，本質上我們還是在<code>create action</code>當中執行。</p></blockquote><hr><p>我們再試一次，這次一樣空著<code>Name</code>欄位不填。送出表單試試看。<br><img src="https://i.imgur.com/pSbfzvk.png"></p><hr><p>咦？這次的畫面有跟上次不一樣了，剛剛填寫過的資料還是有保留起來，<code>Name</code>欄位也是維持空著的狀態。可以達到這樣的效果，就是<code>form_for()</code>它神奇的地方。<br><img src="https://i.imgur.com/bWbLF1u.png"></p><hr><p>因為在<code>new.htaml.erb</code>檔案中的<code>form_for(@candidate)</code>，它會去接<code>@candidate</code>這個變數。<br><img src="https://i.imgur.com/fl2gxPi.png"><br>另外我們在<code>CandidatesController</code>裡面的<code>new action</code>、<code>create action</code> 也都有用到<code>@candidate</code>變數。<br><img src="https://i.imgur.com/fV7M9O7.png"></p><hr><p>這個就是我們取變數名稱時，「故意」取同名的用意，製造「巧合」。<br>透過這個「巧合」，當它在<code>render</code>這個<code>new.html.erb</code>這個過程中，會去抓變數<code>@candidate</code>。當抓到<code>@candidate</code>，它不是空的，它裡面是「有料的」**(candidate_params)** 。因為我們仍然在執行<code>create acion</code>。</p><h3 id="form-helper-神奇黑魔法"><a href="#form-helper-神奇黑魔法" class="headerlink" title="form helper 神奇黑魔法"></a>form helper 神奇黑魔法</h3><p>接著就是<code>new.html.erb</code>裡面<code>form_for()</code>它厲害的地方。它會根據我們給它的那包東西<code>參數(@candidate)</code>裡面相對應的值，放到相對應的欄位。<br>因此當我們按下送出按鈕後，會看到畫面上欄位裡還保留著剛剛填入的資料。</p><h3 id="因為HTTP沒有所謂的「狀態」，所以如果今天使用redirect-to，把它轉址轉過去，就會整個頁面重新整理，欄位當然就被清空。"><a href="#因為HTTP沒有所謂的「狀態」，所以如果今天使用redirect-to，把它轉址轉過去，就會整個頁面重新整理，欄位當然就被清空。" class="headerlink" title="因為HTTP沒有所謂的「狀態」，所以如果今天使用redirect_to，把它轉址轉過去，就會整個頁面重新整理，欄位當然就被清空。"></a>因為HTTP沒有所謂的「狀態」，所以如果今天使用redirect_to，把它轉址轉過去，就會整個頁面重新整理，欄位當然就被清空。</h3><h3 id="在驗證不過，存檔失敗時，去借用「現有的」表單重新畫一次"><a href="#在驗證不過，存檔失敗時，去借用「現有的」表單重新畫一次" class="headerlink" title="在驗證不過，存檔失敗時，去借用「現有的」表單重新畫一次"></a>在驗證不過，存檔失敗時，去借用「現有的」表單重新畫一次</h3><ul><li>要記得，不是重新執行<code>CandidatesController</code>的<code>new action</code>!!!</li><li>是借用<code>view/new.html.erb</code>這個檔案，重新把它<code>render</code>出來!!!</li></ul><p>失敗時頁面是有了，但是似乎少了醒目的提示。</p><hr><h2 id="下一堂課，我們就使用CSS來製作一些醒目的提示"><a href="#下一堂課，我們就使用CSS來製作一些醒目的提示" class="headerlink" title="下一堂課，我們就使用CSS來製作一些醒目的提示"></a>下一堂課，我們就使用CSS來製作一些醒目的提示</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">class CandidatesController &lt; ApplicationController</span><br><span class="line">    </span><br><span class="line">    def index</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    def new</span><br><span class="line">        @candidate = Candidate.new</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    def create</span><br><span class="line"></span><br><span class="line">        @candidate = Candidate.new(candidate_params)</span><br><span class="line">        if @candidate.save</span><br><span class="line">            flash[:notice] = &quot;Candidate created!!!&quot;</span><br><span class="line">            redirect_to &#x27;/candidates&#x27;</span><br><span class="line">        else</span><br><span class="line">        #NG</span><br><span class="line">        render :new</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    private</span><br><span class="line">    def candidate_params</span><br><span class="line">        params.require(:candidate).permit(:name, :party, :age, :politics)</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line"> end</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。&quot;&gt;&lt;a href=&quot;#什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。&quot; class=&quot;headerlink&quot; title=&quot;什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。&quot;&gt;&lt;/a&gt;什麼是新增候選人失敗，驗證表單該填的欄位是否填寫，資料格式是否正確，沒有通過驗證，即是存檔失敗。&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;進入&lt;code&gt;mondel/candidate.rb&lt;/code&gt; 在這個&lt;code&gt;model&lt;/code&gt;裡面，我們來增加驗證的內容。</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 006 (資料清洗 data cleaning)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-006-%E8%B3%87%E6%96%99%E6%B8%85%E6%B4%97-data-cleaning/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-006-%E8%B3%87%E6%96%99%E6%B8%85%E6%B4%97-data-cleaning/</id>
    <published>2023-01-13T18:22:44.000Z</published>
    <updated>2023-01-13T18:33:44.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="練習-006-資料清洗-data-cleaning"><a href="#練習-006-資料清洗-data-cleaning" class="headerlink" title="練習 - 006 (資料清洗 data cleaning)"></a>練習 - 006 (資料清洗 data cleaning)</h1><p>首先在<code>CandidatesController</code>的<code>create</code>action，我們宣告一個變數<code>clean_params</code>承接清洗過的資料。</p><span id="more"></span><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">create</span></span><br><span class="line">    clean_params = params.<span class="keyword">require</span>(<span class="symbol">:candidate</span>).permit(<span class="symbol">:name</span>, <span class="symbol">:party</span>, <span class="symbol">:age</span>, <span class="symbol">:politics</span>)</span><br><span class="line">    <span class="comment"># require方法，表示只要params裡面的candidate資料</span></span><br><span class="line">    <span class="comment"># permit方法，只允許cadidate中的部分欄位可以過來</span></span><br><span class="line">    <span class="variable">@candidate</span> = <span class="title class_">Candidate</span>.new(clean_params)</span><br><span class="line">    <span class="comment"># 把清洗過的資料`clean_params`放到`Candidate.new(clean_params)`，作為Candidate.new()的參數</span></span><br><span class="line">    <span class="keyword">if</span> <span class="variable">@candidate</span>.save</span><br><span class="line">        redirect_to <span class="string">&#x27;/candidates&#x27;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment"># NG</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/UinnykQ.png"></p><hr><p>打開瀏覽器來看看<br>首先各個欄位填入資料<br><img src="https://i.imgur.com/wWGPUoo.png"><br>按下送出，存檔。直接跳回後選人的列表頁。<br><img src="https://i.imgur.com/Z5i5bI0.png"></p><hr><p>這樣表示是有資料 <strong>寫入成功</strong> 了，才會跳回候選人列表頁面。<br>要如何確認呢？<br>我們可以透過終端機的中控台模式來查看<br>在終端機輸入<code>rails c --sandbox</code> 表示打開 rails console 沙盒模式<br><img src="https://i.imgur.com/pQK5pZu.png"><br><img src="https://i.imgur.com/M1fkd52.png"></p><hr><p>接著入輸入<code>Candidate.all</code>。這個指令可以show出，現在Candidate表單裡面所有的資料。<br>可以發現有一包陣列，包含了<code>id, name, party, politics, votes</code>等欄位。<br>就是剛剛我們在瀏覽器上輸入的那筆資料。<br><img src="https://i.imgur.com/SyGNZpn.png"></p><hr><p>但是，到這邊可以發現好像缺少點什麼，資料是成功寫入資料庫，但直接跳回候選人列表的頁面，這樣的使用者體驗不太優。似乎少了點提示，讓使用者知道到底有沒有投票成功。所以我們就來增加這個功能吧!!!</p><p>回到<code>CandidateController</code>的<code>create</code> action，我們來寫個提示(<code>flash[]</code>)。<br><img src="https://i.imgur.com/7x9h1K4.png"></p><hr><p>接著我們在<code>index.html.erb</code> 把那<code>flash[]</code> 給印在頁面上。<br><code>flash[]</code>的特點就是，只要頁面有印過一次，頁面重新整理後，也不會再出現。<br><img src="https://i.imgur.com/C9Ni0DE.png"></p><hr><p>我們就在新增一位候選人看看，是否真的有出現<code>flash[]</code><br><img src="https://i.imgur.com/yAMXdfO.png"></p><hr><p>按下送出按鈕，真的有出現提示!!!<br><img src="https://i.imgur.com/Kp5EcFE.png"></p><hr><p>現在確定功能有正常顯示，接著我們來做程式碼的整理，讓程式碼可以更乾淨，可讀性更高。<br>首先，在<code>CandidatesController</code>中<code>create action</code>清洗資料的那行，等號右邊有點太長了。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clarn_params = params.<span class="keyword">require</span>(<span class="symbol">:candidate</span>).permit(<span class="symbol">:name</span>, <span class="symbol">:party</span>, <span class="symbol">:age</span>, <span class="symbol">:politics</span>)</span><br></pre></td></tr></table></figure><p>之後還會有其他的 aciton 會需要使用，所以我們可以用一個方法把它包起來。<br>這樣一來原本的</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clarn_params = params.<span class="keyword">require</span>(<span class="symbol">:candidate</span>).permit(<span class="symbol">:name</span>, <span class="symbol">:party</span>, <span class="symbol">:age</span>, <span class="symbol">:politics</span>)</span><br></pre></td></tr></table></figure><p>就可以整行拿掉。<br><img src="https://i.imgur.com/MG7vewh.png"></p><hr><p>因為<code>candidate_params</code>只會在這個<code>class</code>底下內被呼叫，不會被其他的<code>class</code>取用。所以我們可以將它變成一個<code>private method</code>。因此我們給它一個註記<br><img src="https://i.imgur.com/kaH00kI.png"></p><hr><blockquote><h3 id="下一堂課，將學習，如果存檔失敗，要如何執行。"><a href="#下一堂課，將學習，如果存檔失敗，要如何執行。" class="headerlink" title="下一堂課，將學習，如果存檔失敗，要如何執行。"></a>下一堂課，將學習，如果存檔失敗，要如何執行。</h3></blockquote>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;練習-006-資料清洗-data-cleaning&quot;&gt;&lt;a href=&quot;#練習-006-資料清洗-data-cleaning&quot; class=&quot;headerlink&quot; title=&quot;練習 - 006 (資料清洗 data cleaning)&quot;&gt;&lt;/a&gt;練習 - 006 (資料清洗 data cleaning)&lt;/h1&gt;&lt;p&gt;首先在&lt;code&gt;CandidatesController&lt;/code&gt;的&lt;code&gt;create&lt;/code&gt;action，我們宣告一個變數&lt;code&gt;clean_params&lt;/code&gt;承接清洗過的資料。&lt;/p&gt;</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 005 (Create Action 的建立 &amp; Forbidden Attribute Error)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-005-Create-Action-%E7%9A%84%E5%BB%BA%E7%AB%8B-Forbidden-Attribute-Error/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-005-Create-Action-%E7%9A%84%E5%BB%BA%E7%AB%8B-Forbidden-Attribute-Error/</id>
    <published>2023-01-13T17:53:19.000Z</published>
    <updated>2023-01-13T18:17:57.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在new-html-erb檔案使用了form-for的View-action-helper寫法"><a href="#在new-html-erb檔案使用了form-for的View-action-helper寫法" class="headerlink" title="在new.html.erb檔案使用了form_for的View action helper寫法"></a>在new.html.erb檔案使用了form_for的View action helper寫法</h2><span id="more"></span><ul><li>但是目前我們的寫法<code>form_for(Candidate.new)</code>，表示我們在view這邊有new一個新的物件出來。這邊可以做一些修改，讓view更專心做它平常做的事情。<br><img src="https://i.imgur.com/RxxiPLT.png"></li><li>在MVC的架構中，view算是相對 <strong>被動</strong> 的角色，負責把東西印出來就好。</li><li>應該是要由controller的部分來做這件事</li></ul><hr><h2 id="接著進到candidates-controller"><a href="#接著進到candidates-controller" class="headerlink" title="接著進到candidates_controller"></a>接著進到candidates_controller</h2><p>把原本在<code>new.html.erb</code>檔案中的<code>Candidate.new</code>搬到<code>candidates_controller</code>的<code>new action</code>中。<br><img src="https://i.imgur.com/p9z96sp.png"><br>回到<code>new.html.erb</code>，將form_for(參數)改成<code>@candidate</code><br><img src="https://i.imgur.com/8n6c1vv.png"><br>此時打開瀏覽器，每個欄位輸入資料，按下送出按鈕，會發現好像畫面卡住不會動。<br><img src="https://i.imgur.com/5OZiB34.png"></p><hr><p>但其實如果看終端機log紀錄，應該會看到log顯示我們對candidates這個路徑使用POST方法，傳送一包parameters給它。並寫到沒有找到對應<code>CandidateController#create</code>的樣板。<br><img src="https://i.imgur.com/ga4tnuy.png"><br>此時，我們回到<code>CandidatesController</code>裡面的<code>create</code>action，寫入一個debugger。<br><img src="https://i.imgur.com/c2gJFEp.png"></p><hr><p>雖然這時候瀏覽器畫面還是呈現轉圈圈，但是終端機是有畫面的，會有一個byebug的輸入區塊<br><img src="https://i.imgur.com/mQExxjl.png"><br>此時可以輸入<code>params</code>看看會得到什麼結果。得到一大串的東西，雖然裡面有<code>token</code>，但是<code>token</code>就交給 Rails 處理。</p><hr><p>我們真正感興趣的是<code>&quot;candidate&quot;</code><br><img src="https://i.imgur.com/olUzfq1.png"></p><hr><p>那我們就接著輸入<code>params[:candidate]</code>看看會出現什麼吧。<br>咦？好像有類似hash的東西唷。先暫時把它當作一個hash看待<br><img src="https://i.imgur.com/d5er7Eo.png"></p><hr><p>我們想要取得當中的名字，那我們就繼續輸入<code>params[:candidate][:name]</code>試試看。確實有拿到我們要的名字<code>&quot;bbb&quot;</code><br><img src="https://i.imgur.com/ib2xUbP.png"></p><hr><p>此時我們可以把剛剛在<code>CandidatesController</code> <code>create</code>action裡面的<code>debugger</code>改成<code>@candidate = Candidate.new(params[:candidate])</code><br><img src="https://i.imgur.com/HA1RiKo.png"></p><hr><p>接著我們可以要這個新產生出來的物件去”存檔”。就會有存檔成功及存檔失敗的狀態，所以這邊我們使用<code>if...else</code>的方式去判斷不同情況，分別要做什麼動作。<br><img src="https://i.imgur.com/BUP82nz.png"></p><hr><h3 id="存檔成功"><a href="#存檔成功" class="headerlink" title="存檔成功"></a>存檔成功</h3><p><img src="https://i.imgur.com/ElZfKQC.png"><br>先來看看瀏覽器畫面。竟然出現之前沒有看過的錯誤訊息<br><img src="https://i.imgur.com/w0KTPM1.png"></p><hr><h2 id="Forbidden-Attribute-Error"><a href="#Forbidden-Attribute-Error" class="headerlink" title="Forbidden Attribute Error"></a>Forbidden Attribute Error</h2><ul><li>看到「Forbidden Attribute Error」訊息，表示我們透過 model 要將整包 Hash 資料放到資料庫的時候，需要先經過「清洗」。</li><li>Model 怕資料裡面會被加料一些奇奇怪怪的東西進去。</li><li>如果資料沒有經過「清洗」，Model 預設是會資料檔下來。</li></ul><hr><p>(舉個例子，有點像是你不洗澡，父母不准你上床睡覺。)<br>(嗯，雖然這個例子滿爛的，但意思很像。)<br>此時會充滿疑惑？不是已經檢視頁面原始碼有使用<code>token</code>來保護了嗎？為什麼還要把資料「清洗」過才能存到資料庫裡面呢？</p><hr><p>現在我們打開瀏覽器，進到新增候選人的頁面，<code>右鍵 &gt; 檢查</code>。<br>將politics的<code>&lt;div&gt;</code>標籤複製然後也填入資料，並且更改裡面的值為<code>Vote</code><br><img src="https://i.imgur.com/m0V9Qmb.png"><br>發現左半邊我們的網頁真的出現剛剛新增的欄位了，我們一樣按下送出按鈕。<br>接著打開終端機，竟然會看到這樣的畫面<br><img src="https://i.imgur.com/XfYdypN.png"><br>我們透過 POST 的方式，要把一包parameters傳送到資料庫，赫然看到了剛剛我們透過瀏覽器<code>右鍵 &gt; 檢查</code>自己手動新增的 <strong>票數欄位</strong> 竟然也傳進來了。</p><blockquote><p><strong>表示我們新增這個候選人時，他就天生自帶1000張票數!!!</strong></p></blockquote><p>可以達成灌票數的原因，在於瀏覽器那邊這包資料有合法的 <code>token</code>。就這樣直接寫入資料庫的話，似乎不太對吧。</p><hr><p>這就是為什麼資料經由 model 寫入資料庫前，需要確認是否有經過「清洗」。</p><ul><li>確保寫入資料庫的資料沒有「被加料」。</li><li>同時維持寫入資料庫的資料不會過於龐大，進而消耗資料庫的資源。</li></ul><hr><blockquote><h3 id="下一堂課程，將學習到如何做資料清洗。"><a href="#下一堂課程，將學習到如何做資料清洗。" class="headerlink" title="下一堂課程，將學習到如何做資料清洗。"></a>下一堂課程，將學習到如何做資料清洗。</h3></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;在new-html-erb檔案使用了form-for的View-action-helper寫法&quot;&gt;&lt;a href=&quot;#在new-html-erb檔案使用了form-for的View-action-helper寫法&quot; class=&quot;headerlink&quot; title=&quot;在new.html.erb檔案使用了form_for的View action helper寫法&quot;&gt;&lt;/a&gt;在new.html.erb檔案使用了form_for的View action helper寫法&lt;/h2&gt;</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 004 (完成新增候選人頁面)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-004-%E5%AE%8C%E6%88%90%E6%96%B0%E5%A2%9E%E5%80%99%E9%81%B8%E4%BA%BA%E9%A0%81%E9%9D%A2/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-004-%E5%AE%8C%E6%88%90%E6%96%B0%E5%A2%9E%E5%80%99%E9%81%B8%E4%BA%BA%E9%A0%81%E9%9D%A2/</id>
    <published>2023-01-13T17:49:51.000Z</published>
    <updated>2023-01-13T18:12:40.225Z</updated>
    
    <content type="html"><![CDATA[<h2 id="出現錯誤訊息，遇到無效的Token"><a href="#出現錯誤訊息，遇到無效的Token" class="headerlink" title="出現錯誤訊息，遇到無效的Token"></a>出現錯誤訊息，遇到無效的Token</h2><span id="more"></span><p><img src="https://i.imgur.com/NmyjGVp.png"></p><ul><li>會出現這個錯誤訊息，是因為Rails要將資料送進資料庫前會做一些驗證的動作。因為只要檢視原始碼，你的路徑都是公開的。</li><li>有心人士就可以在要傳送的資料裡面加料，如果你沒有這些驗證的步驟，那不就很危險了嗎？</li></ul><hr><p>回到<code>new.html.erb</code>，來增加驗證功能。這行code格式有規定，須依照規定寫。<br><img src="https://i.imgur.com/XTfyxIl.png"></p><hr><p>瀏覽器畫面<br><img src="https://i.imgur.com/O9YgkgX.png"></p><hr><h2 id="但是這樣寫太長也太麻煩了，所以-Rails-有提供小幫手form-helper-form-for-表示要幫某個model做一個表單出來-所以form-for-Candidate-new-表示做一個新的候選人表單出來"><a href="#但是這樣寫太長也太麻煩了，所以-Rails-有提供小幫手form-helper-form-for-表示要幫某個model做一個表單出來-所以form-for-Candidate-new-表示做一個新的候選人表單出來" class="headerlink" title="但是這樣寫太長也太麻煩了，所以 Rails 有提供小幫手form helper* form_for()表示要幫某個model做一個表單出來* 所以form_for(Candidate.new) 表示做一個新的候選人表單出來"></a>但是這樣寫太長也太麻煩了，所以 Rails 有提供小幫手<code>form helper</code><br>* form_for()表示要幫某個model做一個表單出來<br>* 所以<code>form_for(Candidate.new)</code> 表示做一個新的候選人表單出來</h2><h3 id="來看看form-for-跟我們自己寫的差別"><a href="#來看看form-for-跟我們自己寫的差別" class="headerlink" title="來看看form_for() 跟我們自己寫的差別"></a>來看看form_for() 跟我們自己寫的差別</h3><ul><li>進到瀏覽器 new 頁面，重新整理，檢視原始碼<br>紅色匡：我們自己寫的 ; 綠色匡：form_for()做的<br><img src="https://i.imgur.com/iyNJJ69.png"></li></ul><hr><p>for_for知道action要往哪裡去，也知道用post方法。也幫你產生好了token。是不是非常快速方便！！！<br>所以可以把我們剛剛自己寫的給刪掉了，直接使用form_for()就可以了。<br><img src="https://i.imgur.com/xkw4xJ4.png"></p><hr><p>打開瀏覽器看看畫面長怎樣<br><img src="https://i.imgur.com/coDqO6w.png"></p><hr><p>一樣有輸入匡，這個就是<code>form.text_field :name</code>產生的。<br>那我們就可以來增加其他欄位<br><img src="https://i.imgur.com/UYd7VXR.png"></p><hr><p>是不是神奇的做好了欄位？<br><img src="https://i.imgur.com/cKkTxfn.png"></p><hr><p>來看看頁面原始碼吧<br><img src="https://i.imgur.com/rQCHCtk.png"></p><hr><p>這邊有一個欄位需要做些調整，有猜到了嗎？沒錯就是政見的欄位，應該使用<code>form.text_area</code>，因為政見發表應該會需要輸入更多內容。<br><img src="https://i.imgur.com/vNdFrMF.png"></p><hr><p>做點畫面上的美化，並加個標籤給每個欄位吧<br><img src="https://i.imgur.com/a02JzHZ.png"></p><hr><p>打開瀏覽器<br><img src="https://i.imgur.com/f8unkjJ.png"></p><hr><blockquote><h3 id="到這裡目前新增候選人的頁面就算完成了，下堂課講解，按下送出按鈕後，找到對應的-create-action-要如何來處理這筆資料。"><a href="#到這裡目前新增候選人的頁面就算完成了，下堂課講解，按下送出按鈕後，找到對應的-create-action-要如何來處理這筆資料。" class="headerlink" title="到這裡目前新增候選人的頁面就算完成了，下堂課講解，按下送出按鈕後，找到對應的 create action 要如何來處理這筆資料。"></a>到這裡目前新增候選人的頁面就算完成了，下堂課講解，按下送出按鈕後，找到對應的 create action 要如何來處理這筆資料。</h3></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;出現錯誤訊息，遇到無效的Token&quot;&gt;&lt;a href=&quot;#出現錯誤訊息，遇到無效的Token&quot; class=&quot;headerlink&quot; title=&quot;出現錯誤訊息，遇到無效的Token&quot;&gt;&lt;/a&gt;出現錯誤訊息，遇到無效的Token&lt;/h2&gt;</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 003 (新增一個候選人model)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-003-%E6%96%B0%E5%A2%9E%E4%B8%80%E5%80%8B%E5%80%99%E9%81%B8%E4%BA%BAmodel/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-003-%E6%96%B0%E5%A2%9E%E4%B8%80%E5%80%8B%E5%80%99%E9%81%B8%E4%BA%BAmodel/</id>
    <published>2023-01-13T17:40:08.000Z</published>
    <updated>2023-01-13T18:11:33.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="練習-003-新增一個候選人model"><a href="#練習-003-新增一個候選人model" class="headerlink" title="練習 - 003 (新增一個候選人model)"></a>練習 - 003 (新增一個候選人model)</h1><span id="more"></span><p><img src="https://i.imgur.com/FLuCLuW.png"></p><hr><h2 id="產生-model-的過程會順便建立一個資料表-table"><a href="#產生-model-的過程會順便建立一個資料表-table" class="headerlink" title="產生 model 的過程會順便建立一個資料表(table)"></a>產生 model 的過程會順便建立一個資料表(table)</h2><h3 id="model-是一個抽象的概念，不是實體存在的"><a href="#model-是一個抽象的概念，不是實體存在的" class="headerlink" title="model 是一個抽象的概念，不是實體存在的"></a>model 是一個抽象的概念，不是實體存在的</h3><p>使用終端機輸入指令的方式，來建立 model 和 migration</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g model <span class="title class_">Candidate</span> name party <span class="symbol">age:</span>integer <span class="symbol">politics:</span>text <span class="symbol">votes:</span>integer</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9yzCeLe.png"></p><p><img src="https://i.imgur.com/FAduswE.png"><br>可以發現 model 檔案名稱是 <strong>“單數”</strong><br>對應的db資料夾內migration中的 class 名稱開頭 <strong>大寫”複數”且駝峰式</strong><br>然後當中對應的 table 是 <strong>小寫”複數”</strong><br><img src="https://i.imgur.com/VyrFFrB.png"></p><hr><p>另外想要讓所有候選人的票數一開始都是 0 票，所以我們先在migration裡面的table 中，votes欄位先增加一行<code>default: 0</code>。給預設值的概念。<br><img src="https://i.imgur.com/0rjBXEu.png"></p><hr><p>這時候我們再執行<code>rails db:migrate</code>，且重新打開瀏覽器<br><img src="https://i.imgur.com/CvMf1Tu.png"></p><hr><h2 id="接下來要製作一個簡單的表單"><a href="#接下來要製作一個簡單的表單" class="headerlink" title="接下來要製作一個簡單的表單"></a>接下來要製作一個簡單的表單</h2><ul><li>要先製作表單前，要先找門口阿姨(Route)，請route告訴我們路徑該怎麼走<br>終端機中輸入<code>rails routes</code> ，會顯示出對應的路徑<code>/candidates/new(.:format)</code><br><img src="https://i.imgur.com/mS44xDJ.png"><br>進到<code>index.html.erb</code>新增一個超連結<code>&lt;a href=&quot;/candidates/new&quot;&gt;Add Candidate&lt;/a&gt;</code><br>打開瀏覽器畫面，就可以看到剛剛新增的超連結<br><img src="https://i.imgur.com/iDF0lne.png"><br>因為 Routes 告訴我們，如果點擊超連結，會帶我們找到<code>candidates#new</code>這個方法，點下去，登愣！！<br><img src="https://i.imgur.com/CxohTBV.png"><br>找不到 new 這個 action。那我們就做給它。</li></ul><hr><p>回到<code>candidates_controller</code>，定義一個叫做 new 的 action(方法)，存檔。<br><img src="https://i.imgur.com/yu2lOVN.png"><br>再次打開終端機，登愣！！！出現新的錯誤訊息。<br><img src="https://i.imgur.com/27F0gbg.png"><br>跟前面建立 index 時候一樣，少了 new 的樣板，所以我們進到 view&#x2F;candidates 資料夾裡面，新增檔案<code>new.html.erb</code>，存檔。<br><img src="https://i.imgur.com/vIXDqVK.png"><br>重新整理瀏覽器，可以看到畫面了。<br><img src="https://i.imgur.com/k1kVPtK.png"><br>有畫面了，那我們就可以開始製作表單囉<br><img src="https://i.imgur.com/QCMbRn3.png"></p><hr><ul><li><code>action</code> 表示要往哪個地方送</li><li><code>method</code> 表示要用什麼方法送<br>我們需要請routes告訴我們往哪裡送。按下超連結後，我們要去<code>candidates#create</code><br><img src="https://i.imgur.com/ABRROjN.png"><br>所以<code>action=</code>後面要接的是<code>/candidates</code> &#x3D;&#x3D;&gt;<code>form action=&quot;/candidates&quot;</code><br>先幫我們的表單加上一個輸入匡<br><img src="https://i.imgur.com/QV0UAil.png"><br><img src="https://i.imgur.com/xyg8t0j.png"></li></ul><hr><p>點下去”送出”按鈕後，會看到錯誤訊息(看到是正確的)<br><img src="https://i.imgur.com/NnZ3cxn.png"><br>前面已經有經歷過 index、new 兩個 action 的步驟，所以這次當然也是一樣囉，找不到 create action ? 那就做一個給你。</p><hr><p>回到<code>camdidates_controller</code>，定義一個<code>create action</code>。<br><img src="https://i.imgur.com/ko3K1Nl.png"><br>存檔，重新整理瀏覽器，應該就可以順利了。咦？怎麼跳出一個沒看過的錯誤訊息。<br><img src="https://i.imgur.com/vVgWBzk.png"><br>為什麼會出現這個錯誤訊息，由下一堂課來講解。</p><hr><blockquote><h3 id="model-是-rb-檔案類型"><a href="#model-是-rb-檔案類型" class="headerlink" title="model 是.rb 檔案類型"></a>model 是.rb 檔案類型</h3><h3 id="ex-candidate-rb"><a href="#ex-candidate-rb" class="headerlink" title="ex: candidate.rb"></a>ex: candidate.rb</h3></blockquote><blockquote><h3 id="model-是一個資料表"><a href="#model-是一個資料表" class="headerlink" title="model 是一個資料表"></a>model 是一個資料表</h3></blockquote><blockquote><h3 id="對應的是-db-裡面的檔案，名稱開頭是大寫，且資料表名稱英文複數型"><a href="#對應的是-db-裡面的檔案，名稱開頭是大寫，且資料表名稱英文複數型" class="headerlink" title="對應的是 db 裡面的檔案，名稱開頭是大寫，且資料表名稱英文複數型"></a>對應的是 db 裡面的檔案，名稱開頭是大寫，且資料表名稱英文複數型</h3><h4 id="ex-class-Candidates-lt-ActiveRecord-Migration"><a href="#ex-class-Candidates-lt-ActiveRecord-Migration" class="headerlink" title="ex: class Candidates &lt; ActiveRecord::Migration"></a>ex: class Candidates &lt; ActiveRecord::Migration</h4></blockquote><blockquote><h3 id="這就是-Rails-慣例"><a href="#這就是-Rails-慣例" class="headerlink" title="這就是 Rails 慣例"></a><em><strong>這就是 Rails 慣例</strong></em></h3><h3 id="慣例優於設定"><a href="#慣例優於設定" class="headerlink" title="慣例優於設定"></a><em>慣例優於設定</em></h3></blockquote>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;練習-003-新增一個候選人model&quot;&gt;&lt;a href=&quot;#練習-003-新增一個候選人model&quot; class=&quot;headerlink&quot; title=&quot;練習 - 003 (新增一個候選人model)&quot;&gt;&lt;/a&gt;練習 - 003 (新增一個候選人model)&lt;/h1&gt;</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 002 (Rails 運作模式)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-002-Rails-%E9%81%8B%E4%BD%9C%E6%A8%A1%E5%BC%8F/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-002-Rails-%E9%81%8B%E4%BD%9C%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-01-13T17:11:22.000Z</published>
    <updated>2023-01-13T18:06:40.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Rails-運作模式"><a href="#Rails-運作模式" class="headerlink" title="Rails 運作模式"></a>Rails 運作模式</h2><ul><li>Route + MVC<span id="more"></span></li></ul><hr><h2 id="先進到專案中的routes-rb"><a href="#先進到專案中的routes-rb" class="headerlink" title="先進到專案中的routes.rb"></a>先進到專案中的routes.rb</h2><p><img src="https://i.imgur.com/9ZYEuqU.png"></p><h3 id="建立-Route"><a href="#建立-Route" class="headerlink" title="建立 Route"></a>建立 Route</h3><p>輸入</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resources candidates /<span class="regexp">/ 這行表示要建立 candidates 相關的資源出來</span></span><br></pre></td></tr></table></figure><ul><li>其實在做網址設計的時候，我們會把每一個網址或是 url 當作資源來看待</li><li>早期的命名習慣 <code>/member_edit.php?id=2</code> 或 <code>/edit_member.php?id=2</code> 或 <code>/member.php?id=2</code></li></ul><hr><ul><li><h3 id="REST-風格"><a href="#REST-風格" class="headerlink" title="REST 風格"></a>REST 風格</h3><code>GET /members  =&gt; list.all  // 列出所有的會員資料</code><br><code>GET /members/2  //表示要看2號會員的資料</code><br><code>GET /members/edit  //表示要編輯2號會員的資料</code><br><code>GET /books  //表示要看所有的書</code><br><code>GET /books/2  //表示要看2號書的資料</code><br><code>GET /books/2/edit   //表示要編輯2號書</code></li></ul><hr><ul><li><h3 id="回到檔案中，輸入完resources-candidates後"><a href="#回到檔案中，輸入完resources-candidates後" class="headerlink" title="回到檔案中，輸入完resources candidates後"></a>回到檔案中，輸入完resources candidates後</h3>打開終端機輸入<code>rails routes</code><br>會看到一個路徑對照表(<strong>Routes</strong>)，看到 Rails 幫我們產生的8條路徑，7個方法(action)<br><img src="https://i.imgur.com/tEKNxIg.png"></li></ul><hr><p>如果想要看到少一點的路徑，比如只要看到index，show。可以輸入<br><img src="https://i.imgur.com/jxyqHBr.png"></p><hr><p>再打開終端機輸入一次<code>rails routes</code>，明顯看到路徑變少了<br><img src="https://i.imgur.com/KCSkf8g.png"></p><hr><p>路徑都打開了，先啟動<code>rails server</code>，接著就打開瀏覽器來確認一下<br>在網址列輸入<code>https://localhost:3000/candidates</code><br>沒有意外的話，會看到紅色的錯誤訊息&lt;Routes沒有找到CandidatesController&gt;<br><img src="https://i.imgur.com/okm5Qex.png"></p><hr><p>這時候不用擔心，看到錯誤訊息出現表示是正確的。<br>竟然沒有找到CandidatesController，那我們就自己做給Routes。<br>打開終端機輸入<code>rails generate controller candidates</code> 或是 <code>rails g controller candidates</code><br>如果不用指令，我們就自己動手建立一個，找到專案裡面的<code>/app/controllers</code>按右鍵新增檔案<br>檔案名稱：<code>candidates_controller.rb</code> &#x2F;&#x2F; 這邊記得檔案名稱使用蛇式(snake_case)命名法。<br>而檔案裡面的<br>class名稱：CandidatesController &#x2F;&#x2F; 使用駝峰式(CamelCase)命名法。<br><img src="https://i.imgur.com/jmG09Zm.png"></p><hr><p>而這個 CandidatesController 繼承自已經寫好的ApplicationController<br>建立好之後，我們一樣回到瀏覽器，再次的進入 candidates 頁面，重新整理，登愣！還是一樣出現紅色的錯誤訊息頁面<br><img src="https://i.imgur.com/ty6BPcu.png"><br>看看錯誤訊息寫了什麼？ index 這個 action 找不到。<br>跟之前一樣，找不到 action？！我們做給你</p><hr><h2 id="在-controller-建立-index-action"><a href="#在-controller-建立-index-action" class="headerlink" title="在 controller 建立 index action"></a>在 controller 建立 index action</h2><p><img src="https://i.imgur.com/TdMUfVB.png"><br>建立完成後，打開瀏覽器，又出現新的錯誤訊息，沒有找到對應 index 的樣板(template)<br><img src="https://i.imgur.com/sI4e8AD.png"></p><hr><p>一樣的方式，少了什麼東西，我們就做給你。其實 template 就是view裡面的頁面。<br>來到 view 當中，直接新增一個資料夾並命名candidates。<br>會這樣命名，也是依照 Rails 的慣例 (CoC)。<br><img src="https://i.imgur.com/Vn4b7ES.png"></p><hr><p>新增一個index.html.erb檔案<br><img src="https://i.imgur.com/Kbpcfuq.png"></p><hr><blockquote><h3 id="到這邊就算建立完成一個index，下一堂課程就要開始來新增Candidate"><a href="#到這邊就算建立完成一個index，下一堂課程就要開始來新增Candidate" class="headerlink" title="到這邊就算建立完成一個index，下一堂課程就要開始來新增Candidate"></a>到這邊就算建立完成一個index，下一堂課程就要開始來新增Candidate</h3></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Rails-運作模式&quot;&gt;&lt;a href=&quot;#Rails-運作模式&quot; class=&quot;headerlink&quot; title=&quot;Rails 運作模式&quot;&gt;&lt;/a&gt;Rails 運作模式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Route + MVC</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 網站開發 練習 - 001 (如何建立新 Rails 專案 - 投票系統)</title>
    <link href="https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-001-%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E6%96%B0-Rails-%E5%B0%88%E6%A1%88/"/>
    <id>https://danny3766.github.io/2023/01/14/Ruby%20on%20Rails%20%E7%B6%B2%E7%AB%99%E9%96%8B%E7%99%BC%20%E7%B7%B4%E7%BF%92-001-%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E6%96%B0-Rails-%E5%B0%88%E6%A1%88/</id>
    <published>2023-01-13T17:02:02.000Z</published>
    <updated>2023-01-13T18:00:34.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="不使用-scaffold-目的？"><a href="#不使用-scaffold-目的？" class="headerlink" title="不使用 scaffold 目的？"></a>不使用 scaffold 目的？</h2><ol><li>scaffold 到底幫我們做了什麼事情？</li><li>MVC 架構的運作原理</li></ol><ul><li>透過 rails 建立一個投票系統來了解上述1、2項目<span id="more"></span></li></ul><hr><h2 id="投票系統"><a href="#投票系統" class="headerlink" title="投票系統"></a>投票系統</h2><ul><li>新增、修改、刪除、投票是一個怎樣的感覺</li></ul><hr><h2 id="new-一個新的專案"><a href="#new-一個新的專案" class="headerlink" title="new 一個新的專案"></a>new 一個新的專案</h2><p>在想要新增專案的目錄輸入指令</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails _6.<span class="number">1</span>.7_ new 專案名稱 /<span class="regexp">/ 指定使用 6.1.7版本的 Rails</span></span><br></pre></td></tr></table></figure><p>接著在輸入指令進入新增的專案目錄中</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 專案名稱</span><br><span class="line">code .    /<span class="regexp">/ 使用 VScode 開啟專案目錄</span></span><br></pre></td></tr></table></figure><p>因為現在 Rails 會自動先幫你執行 git 初始化 ➤ <code>git init</code><br>所以我們打開 VScode 第一件做的事情就是打開 Terminal 輸入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;init commit&quot;  // 這裡的描述不一定要使用 init</span><br></pre></td></tr></table></figure><p>接下來確認環境有建立正確，故輸入</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails s <span class="keyword">or</span> rails server  /<span class="regexp">/ 兩種方式都一樣</span></span><br></pre></td></tr></table></figure><p>打開瀏覽器輸入<a href="https://localhost:3000/">https://localhost:3000</a><br><img src="https://i.imgur.com/IxMFZSj.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;不使用-scaffold-目的？&quot;&gt;&lt;a href=&quot;#不使用-scaffold-目的？&quot; class=&quot;headerlink&quot; title=&quot;不使用 scaffold 目的？&quot;&gt;&lt;/a&gt;不使用 scaffold 目的？&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;scaffold 到底幫我們做了什麼事情？&lt;/li&gt;
&lt;li&gt;MVC 架構的運作原理&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;透過 rails 建立一個投票系統來了解上述1、2項目</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 小試身手 (初識 Rails)</title>
    <link href="https://danny3766.github.io/2022/12/13/Ruby-on-Rails-%E5%B0%8F%E8%A9%A6%E8%BA%AB%E6%89%8B-%E5%88%9D%E8%AD%98-Rails/"/>
    <id>https://danny3766.github.io/2022/12/13/Ruby-on-Rails-%E5%B0%8F%E8%A9%A6%E8%BA%AB%E6%89%8B-%E5%88%9D%E8%AD%98-Rails/</id>
    <published>2022-12-12T18:34:47.000Z</published>
    <updated>2023-01-13T17:55:30.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ruby-on-Rails-小試身手-初識-Rails"><a href="#Ruby-on-Rails-小試身手-初識-Rails" class="headerlink" title="Ruby on Rails 小試身手 (初識 Rails)"></a>Ruby on Rails 小試身手 (初識 Rails)</h1><span id="more"></span><ol><li><p>是用 Ruby 做出來的<strong>網站開發框架</strong></p></li><li><p>發明人:David Heinemeier Hansson(DHH)</p></li><li><p>首次公開發表:西元2004年</p></li><li><p>西元2005年在研討會上用15分鐘做出一個blog系統，開始吸引大量開發者關注。</p></li></ol><h2 id="Rails-有兩大設計哲學"><a href="#Rails-有兩大設計哲學" class="headerlink" title="Rails 有兩大設計哲學"></a>Rails 有兩大設計哲學</h2><ol><li><p>DRY &#x3D; 不做重複的事 (Don’t Repeat Yourself)</p></li><li><p>CoC &#x3D; 慣例優於設定 (Covention Over Configuration)</p></li></ol><h2 id="使用-Scaffold-創建一個-table-出來"><a href="#使用-Scaffold-創建一個-table-出來" class="headerlink" title="使用 Scaffold 創建一個 table 出來"></a>使用 Scaffold 創建一個 table 出來</h2><p>第一步 輸入指令:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">generate scaffold <span class="title class_">User</span> <span class="symbol">name:</span>string <span class="symbol">email:</span>string <span class="symbol">tel:</span>string</span><br></pre></td></tr></table></figure><ul><li>可以偷懶一下少敲打一些字 ：<br>generate &#x3D; g<br>String 型態可省略不打<br>bin&#x2F;rails 可以輸入 rails 就好</li></ul><hr><p>至於什麼時候用<code>bin/rails</code>這個指令，是因為在本機有安裝不同版本的rails，每個專案開發時使用的版本不同，<code>bin/rails</code>會只針對專案本身使用的rails版本去執行。</p><p>而<code>rails</code>預設會使用目前本機端內最新版本的rails來執行。</p><ul><li>所以有時候會發現某些專案輸入<code>rails g</code>不會執行，要使用<code>bin/rails</code>才會執行。</li></ul><hr><p>讓我們開始認識Ruby on Rails，看看它有什麼厲害的地方吧！</p><p>首先：cd 到我們要建立專案的目錄底下輸入指令:<code>rails new test-scaffold</code>再 cd 到 test-scaffold 目錄中。</p><p>接著我們就開始在終端機輸入指令</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g scaffold <span class="title class_">User</span> name email tel</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/LALBWQs.png"></p><p>可以看到Rails已經幫我們生成好多檔案出來，雖然目前還不了解這些檔案的個別功用，之後在實體課程中會進一步了解。這些檔案就是網站架構起來的關鍵。</p><p>看到指令中<code>scaffold</code>這個單字，中文翻譯「鷹架」，從這邊其實大概可以猜的出來這個指令應該是要產生類似腳架的結構出來，一般我們日常生活最常看到這種腳架或鷹架結構，就是建造房屋、大樓。所以看到這行指令會猜想應該是產生要架構出網站的「鷹架」。</p><p>這個指令所產生一整串的檔案，其中db&#x2F;migrate&#x2F;這個目錄開頭的.rb檔，是一個描述檔。描述「資料庫的架構長什麼樣子」。在這邊可以先理解成描述我們剛剛輸入的指令，之後要建立一張資料表，表單名稱叫做User，且表單裡面會有一些欄位分別是要存放name、email、tellphone等資料。</p><p>你會想問為什麼會有這個表單，它的作用如何？這就要說到Rails是由一種叫做 MVC 的軟體構模式來設計網站，主要目的是分化程式的權責，口語化來說，就是各司其職，比如一間餐廳，廚師負責烹飪出菜，服務人員負責接待客人、帶位，收銀櫃檯人員負責結帳，就是分工合作的概念。</p><ul><li><p>M(Model):模型，它主要負責跟資料庫溝通。該拿取什麼資料透過Model。</p></li><li><p>V(View):可以當作讓使用者看到的畫面，所以稱為「View」。主要是呈現畫面讓使用者看到。</p></li><li><p>C(Controller):控制器，可以想像成「指揮官」，contoller負責指揮model要去資料庫拿什麼資料，然後決定要用什麼樣的畫面讓view呈現給使用者看到。</p></li></ul><hr><p>所以剛剛前面提到的「描述檔」就是跟model有關係的，因為model才會知道要怎麼拿取資料。之後的實體課程會再進一步的學習。</p><p>第二步：把 scaffold 的資料表設定具象化</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails <span class="symbol">db:</span>migrate</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/hXOlgae.png"></p><p>這個步驟是把描述檔，生成User資料表。</p><p>第三步：啟動伺服器</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails server 或是 減寫 rails s</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/gVRiWXF.png"></p><p>然後，打開瀏覽器，輸入網址<br><code>http://localhost:3000/users</code><br><img src="https://i.imgur.com/Rt2Ohey.png"></p><p>耶～～恭喜你，成功建立一個簡單的表單網頁了~~~</p><p>按下<code>New user</code>會看到一個新增user的頁面</p><p><img src="https://i.imgur.com/nsEcMsk.png"></p><p>可以快速的產生一個簡單的user頁面。還能做到新增&#x2F;修改&#x2F;刪除。這邊就不放上修改及刪除的頁面了。</p><p><img src="https://i.imgur.com/lMGDM7R.png"></p><p><img src="https://i.imgur.com/CXVHCqt.png"></p><p>第一次看到，哇!!!真是太神奇了，Rails。</p><p>這就是第一次與Rails見面。也是第一次寫學習筆記的分享。</p><p>或許有些觀念是沒有理解清楚，可以幫忙給予糾正。</p><p>期許自己透過分享學習筆記的過程，課程中較模糊或沒有完全理解的觀念可以慢慢的整理清楚。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Ruby-on-Rails-小試身手-初識-Rails&quot;&gt;&lt;a href=&quot;#Ruby-on-Rails-小試身手-初識-Rails&quot; class=&quot;headerlink&quot; title=&quot;Ruby on Rails 小試身手 (初識 Rails)&quot;&gt;&lt;/a&gt;Ruby on Rails 小試身手 (初識 Rails)&lt;/h1&gt;</summary>
    
    
    
    <category term="ASTRO CAMP 線上課程學習筆記" scheme="https://danny3766.github.io/categories/ASTRO-CAMP-%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="Ruby on Rails" scheme="https://danny3766.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://danny3766.github.io/2022/12/05/test/"/>
    <id>https://danny3766.github.io/2022/12/05/test/</id>
    <published>2022-12-05T10:59:18.199Z</published>
    <updated>2022-12-05T10:59:39.857Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: test<br>date: 2022-12-05 18:59:18<br>tags:<br>這是測試用文章</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;title: test&lt;br&gt;date: 2022-12-05 18:59:18&lt;br&gt;tags:&lt;br&gt;這是測試用文章&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
